<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="TechCirle2sMini" ignored="0" name="Default test" tests="52" failures="2" timestamp="2022-05-24T21:40:19 EDT" time="0.285" errors="0">
  <testcase name="Test1" time="0.013" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.002" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.002" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.003" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.003" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.002" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.002" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.005" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.006" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.005" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.002" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.002" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.003" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.003" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.002" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.002" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.0" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test1" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at SeleniumDay_11.retryFailedTest1.Test1(retryFailedTest1.java:13)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- Test1 -->
  <testcase name="Test2" time="0.001" classname="SeleniumDay_11.retryFailedTest1">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at SeleniumDay_11.retryFailedTest1.Test2(retryFailedTest1.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- Test2 -->
</testsuite> <!-- Default test -->
